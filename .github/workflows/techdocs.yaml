name: Publish TechDocs Site

on:
  repository_dispatch:
    types: [docs-update]

jobs:
  generate-and-publish:
    runs-on: ubuntu-latest
    env:
      BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_ENDPOINT: https://s3-openshift-storage.apps.smaug.na.operate-first.cloud
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Clone repo
        uses: actions/checkout@v3
        with:
          repository: '${{ github.event.client_payload.repository }}'
      
      - name: Setup node
        uses: actions/setup-node@v2

      - name: Setup python
        uses: actions/setup-python@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: download, validate, install plantuml and its dependencies
        run: |
          curl -o plantuml.jar -L http://sourceforge.net/projects/plantuml/files/plantuml.1.2021.4.jar/download
          echo "be498123d20eaea95a94b174d770ef94adfdca18  plantuml.jar" | sha1sum -c -
          mv plantuml.jar /opt/plantuml.jar
          mkdir -p "$HOME/.local/bin"
          echo $'#!/bin/sh\n\njava -jar '/opt/plantuml.jar' ${@}' >>  "$HOME/.local/bin/plantuml"
          chmod +x "$HOME/.local/bin/plantuml"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          sudo apt-get install -y graphviz

      - name: Install techdocs-cli
        run: sudo npm install --location=global @techdocs/cli

      - name: Install mkdocs and mkdocs plugins
        run: python -m pip install mkdocs-techdocs-core==1.*

      - name: Generate docs site
        working-directory: ${{ github.event.client_payload.docs_path }}
        run: techdocs-cli generate --no-docker --verbose

      - name: Publish docs site
        working-directory: ${{ github.event.client_payload.docs_path }}
        run: | 
          techdocs-cli publish \
            --publisher-type awsS3 \
            --storage-name $BUCKET_NAME \
            --awsEndpoint $AWS_ENDPOINT \
            --awsS3ForcePathStyle \
            --entity ${{ github.event.client_payload.entity_namespace }} \
                    /${{ github.event.client_payload.entity_kind }} \
                    /${{ github.event.client_payload.entity_name }}
